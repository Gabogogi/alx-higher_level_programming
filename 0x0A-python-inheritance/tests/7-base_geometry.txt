Importing the function from the module:
	>>> fig  = __import__("7-base_geometry").BaseGeometry

Checking for module docstring:
	 >>> m = __import__("7-base_geometry").__doc__
	 >>> len(m) > 1
	 True

Check for class docstring
    >>> f = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(f) > 1
    True

Checking for method docstring
	>>> doc1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
	>>> len(doc1) > 1
	True
	>>> doc2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
	>>> len(doc2) > 1
	True


Checkig that  area fails
	>>> base = fig()
	>>> base.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Checking too many args for area
	>>> base.area(1)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

Checking integer validator for passing integer
	>>> base.integer_validator("hey", 8)

Check for negative number
	>>> base.integer_validator("hey", -5)
	Traceback (most recent call last):
	ValueError: hey must be greater than zero

Ceck for integer == 0
	>>> base.integer_validator("integer", 0)
	Traceback (most recent call last):
	ValueError: integer must be greater than 0
