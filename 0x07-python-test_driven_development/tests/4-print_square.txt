Test for  4-print_square.py

prints a square with the character #.

Importing the function from the module:
	>>> print_square = __import__('4-print_square').print_square

Checking for module docstring:
	 >>> m = __import__("4-print_square").__doc__
	 >>> len(m) > 1
	 True

Check for function docstring
    >>> f = __import__("4-print_square").print_square.__doc__
    >>> len(f) > 1
    True

positive integers
    >>> print_square(5)
	#####
	#####
	#####
	#####


Negative integers
    >>> print_square(-5)
    Traceback (most recent call last):
    ValueError: size must be >= 0


Non-Number arguments:
    >>> print_square((6,6))
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square("3")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(True)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(4.8)
    Traceback (most recent call last):
    TypeError: size must be an integer

Checking for no args:
	 >>> print_square()
	 Traceback (most recent call last):
	 ...
	 TypeError: print_square() missing 1 required positional argument: 'size'
